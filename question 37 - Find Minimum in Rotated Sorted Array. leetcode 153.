class Solution {
public:
    int findMin(vector<int>& arr) {
        int n = arr.size();
        int s = 0;
        int e = n-1;

        while(s < e){
            if (arr[s] < arr[e]) {
                return arr[s];
            }

            int mid = s + (e-s)/2;
            
            if (arr[mid] >= arr[s]) {
                s = mid + 1;
            } else {
                e = mid;
            }
        }
        return arr[s];
    }
};

Approach:
Use a modified binary search to find the pivot point (where the array is rotated)
The minimum element is at this pivot point. 
Time Complexity: O(log n)
Space Complexity: O(1)
