class Solution {
public:
    int searchInsert(vector<int>& arr, int target) {
        int n = arr.size();
        int s = 0;
        int e = n-1;
        int ans = n; 
        
        while(s <= e) {
            int mid = s + (e-s)/2;
            if (arr[mid] >= target) { 
                ans = mid;
                e = mid - 1;
            }
            else {
                s = mid + 1;
            }
        }
        
        return ans;
    }
};

Approach:
Use binary search to find the target or the position where it should be inserted
Keep track of the smallest index where the element is greater than or equal to the target
Time Complexity: O(log n)
Space Complexity: O(1)
