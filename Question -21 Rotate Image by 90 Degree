Rotate Image By 90 Degree - leetcode (48)
 Approach: Two-step process - transpose the matrix, then reverse each row.
 Time Complexity: O(n^2), where n is the size of the matrix.
 Space Complexity: O(1), in-place rotation.

class Solution {
public:
    void rotate(vector<vector<int>>& matrix) {
        int n = matrix.size();
        
        // Step 1: Transpose the matrix
        for(int i = 0; i < n; i++) {
            for(int j = i; j < n; j++) {
                swap(matrix[i][j], matrix[j][i]);
            }
        }
        
        // Step 2: Reverse each row
        for(int i = 0; i < n; i++) {
            reverse(matrix[i].begin(), matrix[i].end());
        }
    }
};
