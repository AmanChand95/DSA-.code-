Approach:
Use binary search to find the peak element. If the middle element is smaller than the next element, the peak is on the right side. Otherwise, the peak is on the left side or at the current position.
Time Complexity: O(log n) 
Space Complexity: O(1)

class Solution {
public:
    int peakIndexInMountainArray(vector<int>& arr) {
        int n=arr.size();
        int s=0;
        int e=n-1;
        int mid=s+(e-s)/2;
        while(s<=e){
            if(arr[mid]<arr[mid+1]){
                s=mid+1;
            }
            else{
                e=mid-1;
            }
            mid=s+(e-s)/2;
        }
        return s;
    }
};
